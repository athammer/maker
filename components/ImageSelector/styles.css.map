{"version":3,"file":"styles.css","mappings":"AAsCA,+BAEA,mBAKA,gCACA,kBAJA,sBAKA,eARA,aAKA,YAHA,uBAOA,wCALA,UAMA,CAEA,+BAEA,YADA,UAEA,CAEA,+BACA,YACA,CCsCA,+BAcA,+BACA,sCACA,mCACA,wCACA,kCACA,0CACA,sBAbA,wBADA,4BAEA,sBACA,kBAPA,sBAEA,YACA,gBAJA,kBASA,wCAPA,UAkBA,CAEA,+BAOA,mBAEA,6EALA,SAEA,aAEA,uBAHA,OAJA,kBAEA,QADA,KAQA,CAEA,+BACA,mCACA,CAEA,+BAKA,mBAIA,sBACA,SACA,kBACA,eARA,aAIA,YAFA,uBALA,kBAEA,UADA,QAKA,UAMA,CAEA,+BAEA,YADA,UAEA,CAEA,+BAOA,yBAJA,SAEA,WADA,OAIA,UAFA,gBALA,kBACA,QAOA,4BACA,CAEA,+BAEA,sBACA,kBAFA,YAGA,4BACA,CCbA,+BAGA,cACA,uBAHA,aACA,cAGA,CAEA,+BACA,aACA","sources":["webpack://@square/maker/./src/components/ImageSelector/src/ImagePicker.vue","webpack://@square/maker/./src/components/ImageSelector/src/ImageSelection.vue","webpack://@square/maker/./src/components/ImageSelector/src/ImageSelector.vue"],"sourcesContent":["<template>\n\t<div\n\t\t:class=\"$s.ImagePickerInputContainer\"\n\t\t@click=\"$refs.input.click()\"\n\t>\n\t\t<input\n\t\t\tref=\"input\"\n\t\t\t:class=\"$s.ImagePickerInput\"\n\t\t\ttype=\"file\"\n\t\t\tmultiple=\"true\"\n\t\t\taccept=\"image/jpeg, image/png\"\n\t\t\t@change=\"selectImages\"\n\t\t>\n\t\t<plus-icon\n\t\t\tinline\n\t\t\t:class=\"$s.ImagePickerInputIcon\"\n\t\t/>\n\t</div>\n</template>\n\n<script>\nimport PlusIcon from '@square/maker-icons/Plus';\n\nexport default {\n\tname: 'MImagePicker',\n\tcomponents: {\n\t\tPlusIcon,\n\t},\n\n\tmethods: {\n\t\tselectImages(fileEvent) {\n\t\t\tthis.$emit('selectImages', [...fileEvent.target.files]);\n\t\t},\n\t},\n};\n</script>\n\n<style module=\"$s\">\n.ImagePickerInputContainer {\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tbox-sizing: border-box;\n\twidth: 96px;\n\theight: 96px;\n\tborder: 1px solid rgba(0, 0, 0, 0.9);\n\tborder-radius: 8px;\n\tcursor: pointer;\n\ttransition: background-color 150ms linear;\n}\n\n.ImagePickerInputIcon {\n\twidth: 15px;\n\theight: 15px;\n}\n\n.ImagePickerInput {\n\tdisplay: none;\n}\n</style>\n","<template>\n\t<div\n\t\t:class=\"{ [$s.ImageSelectionContainer]: true, [$s.ImageSelectionContainerError]: hasError }\"\n\t\trole=\"img\"\n\t\t:style=\"bgImageStyle\"\n\t>\n\t\t<div\n\t\t\tv-if=\"isUploading\"\n\t\t\t:class=\"$s.ImageSelectionLoaderContainer\"\n\t\t>\n\t\t\t<m-loading :class=\"$s.ImageSelectionLoader\" />\n\t\t</div>\n\n\t\t<div\n\t\t\t:class=\"$s.ImageSelectionProgressContainer\"\n\t\t\t:style=\"progressContainerStyle\"\n\t\t>\n\t\t\t<div\n\t\t\t\t:class=\"$s.ImageSelectionProgress\"\n\t\t\t\t:style=\"progressStyle\"\n\t\t\t/>\n\t\t</div>\n\n\t\t<button\n\t\t\tv-if=\"!isUploading\"\n\t\t\ttype=\"button\"\n\t\t\t:class=\"$s.ImageSelectionRemoveButton\"\n\t\t\t@click=\"$emit('removeImage', image.id)\"\n\t\t>\n\t\t\t<!-- TODO: Icon -->\n\t\t\t<x-icon\n\t\t\t\tinline\n\t\t\t\t:class=\"$s.ImageSelectionRemoveIcon\"\n\t\t\t/>\n\t\t</button>\n\t</div>\n</template>\n\n<script>\nimport { MLoading } from '@square/maker/components/Loading';\nimport XIcon from '@square/maker-icons/X';\nimport { IMAGE_SELECTOR_STATUSES } from './constants';\n\nconst MAX_PROGRESS = 100;\n\nexport default {\n\tname: 'MImageSelection',\n\n\tcomponents: {\n\t\tMLoading,\n\t\tXIcon,\n\t},\n\n\tprops: {\n\t\timage: {\n\t\t\ttype: Object,\n\t\t\trequired: true,\n\t\t},\n\t},\n\n\tcomputed: {\n\t\tbgImageStyle() {\n\t\t\treturn {\n\t\t\t\tbackgroundImage: `url(\"${this.image.url}\")`,\n\t\t\t};\n\t\t},\n\n\t\tshowProgressBar() {\n\t\t\treturn this.image.progress < MAX_PROGRESS;\n\t\t},\n\n\t\tprogressContainerStyle() {\n\t\t\treturn {\n\t\t\t\t// eslint-disable-next-line no-magic-numbers\n\t\t\t\topacity: this.showProgressBar ? 1 : 0,\n\t\t\t};\n\t\t},\n\n\t\tprogressStyle() {\n\t\t\treturn {\n\t\t\t\twidth: `${this.image.progress}%`,\n\t\t\t};\n\t\t},\n\n\t\tisUploading() {\n\t\t\treturn this.image.status === IMAGE_SELECTOR_STATUSES.PENDING;\n\t\t},\n\n\t\thasError() {\n\t\t\treturn this.image.status === IMAGE_SELECTOR_STATUSES.ERROR;\n\t\t},\n\t},\n};\n</script>\n\n<style module=\"$s\">\n.ImageSelectionContainer {\n\tposition: relative;\n\tbox-sizing: border-box;\n\twidth: 96px;\n\theight: 96px;\n\toverflow: hidden;\n\tbackground-repeat: no-repeat;\n\tbackground-position: center;\n\tbackground-size: cover;\n\tborder-radius: 8px;\n\ttransition: background-image linear 150ms;\n\n\t/* these should later be pulled from\n\tthe ThemeProvider component */\n\t--color-border: rgba(0, 0, 0, 0.3);\n\t--color-border-active: rgba(0, 0, 0, 0.9);\n\t--color-background: rgba(0, 0, 0, 0.9);\n\t--color-foreground: rgba(255, 255, 255, 0.95);\n\t--color-disabled: rgba(0, 0, 0, 0.05);\n\t--color-disabled-checked: rgba(0, 0, 0, 0.15);\n\t--color-error: #ff3b30;\n}\n\n.ImageSelectionLoaderContainer {\n\tposition: absolute;\n\ttop: 0;\n\tright: 0;\n\tbottom: 0;\n\tleft: 0;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tbackground-image: linear-gradient(0deg, rgba(255, 255, 255, 0.5), rgba(255, 255, 255, 0.5));\n}\n\n.ImageSelectionContainerError {\n\tborder: 2px solid var(--color-error);\n}\n\n.ImageSelectionRemoveButton {\n\tposition: absolute;\n\ttop: 8px;\n\tright: 8px;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\twidth: 32px;\n\theight: 32px;\n\tbackground-color: #fff;\n\tborder: 0;\n\tborder-radius: 50%;\n\tcursor: pointer;\n}\n\n.ImageSelectionRemoveIcon {\n\twidth: 16px;\n\theight: 16px;\n}\n\n.ImageSelectionProgressContainer {\n\tposition: absolute;\n\tright: 0;\n\tbottom: 0;\n\tleft: 0;\n\theight: 4px;\n\toverflow: hidden;\n\tbackground-color: #f5f4f4;\n\topacity: 1;\n\ttransition: opacity 250ms ease;\n}\n\n.ImageSelectionProgress {\n\theight: 100%;\n\tbackground-color: #000;\n\tborder-radius: 4px;\n\ttransition: width 150ms linear;\n}\n</style>\n","<template>\n\t<div :class=\"$s.ImageUploaderContainer\">\n\t\t<m-image-picker\n\t\t\tv-if=\"canUploadImage\"\n\t\t\t:class=\"$s.ImageUploaderItem\"\n\t\t\t@selectImages=\"selectImages\"\n\t\t/>\n\t\t<m-image-selection\n\t\t\tv-for=\"image of model\"\n\t\t\t:key=\"image.id\"\n\t\t\t:image=\"image\"\n\t\t\t:class=\"$s.ImageUploaderItem\"\n\t\t\t@removeImage=\"removeImage\"\n\t\t/>\n\t</div>\n</template>\n\n<script>\nimport Vue from 'vue';\nimport MImagePicker from './ImagePicker.vue';\nimport MImageSelection from './ImageSelection.vue';\nimport { IMAGE_SELECTOR_STATUSES } from './constants';\n\nconst MAX_PROGRESS = 100;\nconst ID_INCREMENT = 1;\nconst NO_MORE_IMAGES_COUNT = 0;\n\nexport default {\n\tname: 'MImageSelector',\n\n\tcomponents: {\n\t\tMImagePicker,\n\t\tMImageSelection,\n\t},\n\n\tprops: {\n\t\tmodel: {\n\t\t\ttype: Array,\n\t\t\tdefault: () => [],\n\t\t},\n\t\tuploadHandler: {\n\t\t\ttype: Function,\n\t\t\tdefault: () => undefined,\n\t\t},\n\t\tmaxImages: {\n\t\t\ttype: Number,\n\t\t\tdefault: () => undefined,\n\t\t},\n\t\tmaxSize: {\n\t\t\ttype: Number,\n\t\t\tdefault: () => undefined,\n\t\t},\n\t},\n\n\tdata: () => ({\n\t\tnextID: 0,\n\t}),\n\n\tcomputed: {\n\t\tcanUploadImage() {\n\t\t\tif (this.maxImages === undefined) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn this.model.length < this.maxImages;\n\t\t},\n\t\tremainingImagesCount() {\n\t\t\tif (!this.canUploadImage) {\n\t\t\t\treturn NO_MORE_IMAGES_COUNT;\n\t\t\t}\n\n\t\t\treturn this.maxImages - this.model.length;\n\t\t},\n\t},\n\n\tmethods: {\n\t\tselectImages(images) {\n\t\t\tif (!this.canUploadImage) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst imagesToUpload = images.length > this.remainingImagesCount\n\t\t\t\t// eslint-disable-next-line no-magic-numbers\n\t\t\t\t? images.slice(0, this.remainingImagesCount)\n\t\t\t\t: images;\n\n\t\t\tconst formattedImages = this.formatImages(imagesToUpload);\n\t\t\tthis.$emit('input', [...this.model, ...formattedImages]);\n\t\t\tformattedImages.forEach((image) => this.handleImageUpload(image));\n\t\t},\n\n\t\tformatImages(images) {\n\t\t\tconst formattedImages = images\n\t\t\t\t.map((image) => {\n\t\t\t\t\tthis.nextID += ID_INCREMENT;\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tid: this.nextID,\n\t\t\t\t\t\tfile: image,\n\t\t\t\t\t\tstatus: IMAGE_SELECTOR_STATUSES.PENDING,\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\tformattedImages.forEach((image) => this.buildImageURL(image));\n\n\t\t\treturn formattedImages;\n\t\t},\n\n\t\tasync handleImageUpload(image) {\n\t\t\tif (!this.uploadHandler) {\n\t\t\t\tVue.set(image, 'progress', MAX_PROGRESS);\n\t\t\t\tVue.set(image, 'status', IMAGE_SELECTOR_STATUSES.COMPLETE);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.maxSize && image.file.size > this.maxSize) {\n\t\t\t\tVue.set(image, 'progress', MAX_PROGRESS);\n\t\t\t\tVue.set(image, 'status', IMAGE_SELECTOR_STATUSES.ERROR);\n\t\t\t\tVue.set(image, 'fileTooLarge', true);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tVue.set(image, 'fileTooLarge', false);\n\n\t\t\ttry {\n\t\t\t\tconst response = await this.uploadHandler({\n\t\t\t\t\timage: image.file,\n\t\t\t\t\tuploadProgressHandler: (progress) => Vue.set(image, 'progress', progress),\n\t\t\t\t});\n\t\t\t\tVue.set(image, 'progress', MAX_PROGRESS);\n\t\t\t\tVue.set(image, 'apiResponse', response);\n\t\t\t\tVue.set(image, 'status', IMAGE_SELECTOR_STATUSES.COMPLETE);\n\t\t\t} catch (error) {\n\t\t\t\tVue.set(image, 'progress', MAX_PROGRESS);\n\t\t\t\tVue.set(image, 'apiError', error);\n\t\t\t\tVue.set(image, 'status', IMAGE_SELECTOR_STATUSES.ERROR);\n\t\t\t}\n\t\t},\n\n\t\tremoveImage(imageID) {\n\t\t\tthis.$emit('input', this.model.filter(({ id }) => id !== imageID));\n\t\t},\n\n\t\tasync buildImageURL(image) {\n\t\t\tconst url = await new Promise((resolve) => {\n\t\t\t\tconst reader = new FileReader();\n\t\t\t\treader.onloadend = () => resolve(reader.result);\n\t\t\t\t// TODO: Add error logging\n\t\t\t\t// eslint-disable-next-line unicorn/prefer-add-event-listener\n\t\t\t\treader.onerror = () => resolve('');\n\t\t\t\treader.readAsDataURL(image.file);\n\t\t\t});\n\n\t\t\tVue.set(image, 'url', url);\n\t\t},\n\t},\n};\n</script>\n\n<style module=\"$s\">\n.ImageUploaderContainer {\n\tdisplay: flex;\n\tflex-wrap: wrap;\n\tgap: 16px;\n\talign-items: flex-start;\n}\n\n.ImageUploaderItem {\n\tflex-shrink: 0;\n}\n</style>\n"],"names":[],"sourceRoot":""}