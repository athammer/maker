{"version":3,"file":"styles.css","mappings":"AA0HA,+BAiBA,kBAdA,mBAMA,yBACA,YACA,2DANA,iDAQA,eAXA,oBAKA,wDADA,oDAFA,YAQA,2BAXA,kBAeA,0BAFA,kCACA,0CAPA,qBAwCA,CA7BA,6DACA,mDACA,CAEA,6DACA,cACA,CAEA,6DACA,cACA,CAEA,2EAEA,iCACA,CAEA,wCACA,WAKA,CAHA,0CACA,UACA,CAGA,6DAEA,qBACA,CAGA,+BAOA,mBAGA,yBANA,WAKA,oCAHA,aAEA,uBAHA,SAJA,kBAEA,UADA,OASA,CAEA,+BAEA,aACA,mBAFA,aAMA,gBAFA,eACA,gBAGA,uBADA,mBAJA,2CAMA","sources":["webpack://@square/maker/./src/components/TextButton/src/TextButton.vue"],"sourcesContent":["<template>\n\t<button\n\t\t:class=\"[\n\t\t\t$s.TextButton,\n\t\t\t$s[`size_${resolvedSize}`],\n\t\t\t{\n\t\t\t\t[$s.loading]: loading,\n\t\t\t}\n\t\t]\"\n\t\t:type=\"type\"\n\t\t:disabled=\"isDisabled\"\n\t\t:style=\"style\"\n\t\tv-bind=\"$attrs\"\n\t\tv-on=\"$listeners\"\n\t>\n\t\t<m-loading\n\t\t\tv-if=\"loading\"\n\t\t\t:class=\"$s.Loading\"\n\t\t/>\n\t\t<span :class=\"$s.MainText\">\n\t\t\t<!-- @slot Button label -->\n\t\t\t<slot />\n\t\t</span>\n\t</button>\n</template>\n\n<script>\nimport { colord } from 'colord';\nimport { MLoading } from '@square/maker/components/Loading';\nimport { MThemeKey, defaultTheme, resolveThemeableProps } from '@square/maker/components/Theme';\nimport assert from '@square/maker/utils/assert';\n\n/**\n * TextButton component\n * @inheritAttrs button\n * @inheritListeners button\n */\nexport default {\n\tcomponents: {\n\t\tMLoading,\n\t},\n\n\tinject: {\n\t\ttheme: {\n\t\t\tdefault: defaultTheme(),\n\t\t\tfrom: MThemeKey,\n\t\t},\n\t},\n\n\tinheritAttrs: false,\n\n\tprops: {\n\t\t/**\n\t\t * pattern defined at theme level\n\t\t */\n\t\tpattern: {\n\t\t\ttype: String,\n\t\t\tdefault: undefined,\n\t\t},\n\t\t/**\n\t\t * Type of the button\n\t\t */\n\t\ttype: {\n\t\t\ttype: String,\n\t\t\tdefault: 'button',\n\t\t},\n\t\t/**\n\t\t * Size of the button label text\n\t\t */\n\t\tsize: {\n\t\t\ttype: String,\n\t\t\tdefault: undefined,\n\t\t\tvalidator: (size) => ['medium', 'large'].includes(size),\n\t\t},\n\t\t/**\n\t\t * Text color of button\n\t\t */\n\t\tcolor: {\n\t\t\ttype: String,\n\t\t\tdefault: undefined,\n\t\t\tvalidator: (color) => colord(color).isValid(),\n\t\t},\n\t\t/**\n\t\t * Toggles button disabled state\n\t\t */\n\t\tdisabled: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false,\n\t\t},\n\t\t/**\n\t\t * Toggles button loading state\n\t\t */\n\t\tloading: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false,\n\t\t},\n\t},\n\n\tcomputed: {\n\t\t...resolveThemeableProps('textbutton', [\n\t\t\t'pattern',\n\t\t\t'size',\n\t\t\t'color',\n\t\t]),\n\t\tstyle() {\n\t\t\treturn {\n\t\t\t\t'--color': this.resolvedColor,\n\t\t\t};\n\t\t},\n\t\tisDisabled() {\n\t\t\treturn this.disabled || this.loading;\n\t\t},\n\t},\n\n\tcreated() {\n\t\tassert.warn(this.$slots.default, 'TextButton should be used with a label');\n\t},\n\n};\n</script>\n\n<style module=\"$s\">\n.TextButton {\n\tposition: relative;\n\tdisplay: inline-flex;\n\talign-items: center;\n\tmin-width: 0;\n\tcolor: var(--color, var(--maker-color-neutral-90));\n\tfont-weight: var(--maker-font-label-font-weight, 500);\n\tfont-family: var(--maker-font-label-font-family, inherit);\n\tvertical-align: middle;\n\tbackground-color: transparent;\n\tborder: none;\n\tborder-radius: var(--maker-shape-default-border-radius, 4px);\n\toutline-color: currentColor;\n\tcursor: pointer;\n\ttransition: box-shadow 0.2s ease-in;\n\tuser-select: none;\n\ttouch-action: manipulation;\n\tfill: currentColor;\n\n\t&.iconButton {\n\t\tmin-width: max-content;\n\t}\n\n\t&.size_medium {\n\t\tfont-size: 14px;\n\t}\n\n\t&.size_large {\n\t\tfont-size: 16px;\n\t}\n\n\t&:active,\n\t&:focus {\n\t\tbox-shadow: 0 0 0 1px currentColor;\n\t}\n\n\t&:disabled {\n\t\tcursor: initial;\n\n\t\t& > * {\n\t\t\topacity: 0.5;\n\t\t}\n\t}\n\n\t&.loading {\n\t\t/* don't inherit color in loading state on hover/active */\n\t\tcolor: transparent !important;\n\t}\n}\n\n.Loading {\n\tposition: absolute;\n\ttop: 4px;\n\tright: 4px;\n\tbottom: 4px;\n\tleft: 4px;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tcolor: var(--maker-color-neutral-90);\n\tbackground-color: transparent;\n}\n\n.MainText {\n\tdisplay: flex;\n\tgap: 8px;\n\talign-items: center;\n\twidth: max-content;\n\tmax-width: 100%;\n\toverflow: hidden;\n\tline-height: 1.5;\n\twhite-space: nowrap;\n\ttext-overflow: ellipsis;\n}\n</style>\n"],"names":[],"sourceRoot":""}