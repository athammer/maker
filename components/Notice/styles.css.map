{"version":3,"file":"styles.css","mappings":"AA2HA,+BAIA,kBAHA,mBACA,eACA,gBAEA,CAEA,+BACA,YACA,CAEA,+BACA,aACA,wBACA,CAEA,iCACA,iBACA,CAEA,2CACA,cACA,CAEA,+BACA,gBACA,oBACA,CAEA,+BACA,gBACA,oBACA,CAEA,+BACA,gBACA,oBACA,CAEA,+BAEA,6CADA,YAEA,CAEA,+BACA,kCACA,sCACA,CAEA,+BAEA,mBADA,aAEA,YACA,gBACA,CAEA,+BAGA,WACA,yBAFA,YADA,UAIA","sources":["webpack://@square/maker/./src/components/Notice/src/Notice.vue"],"sourcesContent":["<template>\n\t<div\n\t\t:class=\"[\n\t\t\t$s.Notice,\n\t\t\t$s[`type_${type}`],\n\t\t\t$s[`variant_${variant}`],\n\t\t]\"\n\t\t:style=\"style\"\n\t\tv-bind=\"$attrs\"\n\t\tv-on=\"$listeners\"\n\t>\n\t\t<div :class=\"$s.IconContentWrapper\">\n\t\t\t<div :class=\"$s.IconAligner\">\n\t\t\t\t<component\n\t\t\t\t\t:is=\"iconComponent\"\n\t\t\t\t\t:class=\"$s.Icon\"\n\t\t\t\t\tinline\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<!-- @slot notice content -->\n\t\t\t\t<slot />\n\t\t\t</div>\n\t\t</div>\n\t\t<div\n\t\t\tv-if=\"showActions\"\n\t\t\t:class=\"$s.ActionsWrapper\"\n\t\t>\n\t\t\t<!-- @slot put text buttons here -->\n\t\t\t<slot name=\"actions\" />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nimport chroma from 'chroma-js';\nimport AlertTriangle from '@square/maker-icons/AlertTriangle';\nimport AlertCircle from '@square/maker-icons/AlertCircle';\nimport CheckCircle from '@square/maker-icons/CheckCircle';\nimport Info from '@square/maker-icons/Info';\nimport assert from '@square/maker/utils/assert';\nimport { MThemeKey, defaultTheme, resolveThemeableProps } from '@square/maker/components/Theme';\n\n/**\n * @inheritAttrs div\n * @inheritListeners div\n */\nexport default {\n\tcomponents: {\n\t\tAlertTriangle,\n\t\tAlertCircle,\n\t\tCheckCircle,\n\t\tInfo,\n\t},\n\n\tinject: {\n\t\ttheme: {\n\t\t\tdefault: defaultTheme(),\n\t\t\tfrom: MThemeKey,\n\t\t},\n\t},\n\n\tinheritAttrs: false,\n\n\tprops: {\n\t\t/**\n\t\t * type of notice\n\t\t */\n\t\ttype: {\n\t\t\ttype: String,\n\t\t\tdefault: 'info',\n\t\t\tvalidator: (type) => ['error', 'success', 'warning', 'info'].includes(type),\n\t\t},\n\t\t/**\n\t\t * notice variant\n\t\t */\n\t\tvariant: {\n\t\t\ttype: String,\n\t\t\tdefault: 'inline',\n\t\t\tvalidator: (variant) => ['inline', 'block'].includes(variant),\n\t\t},\n\t\t/**\n\t\t * notice color\n\t\t */\n\t\tcolor: {\n\t\t\ttype: String,\n\t\t\tdefault: undefined,\n\t\t\tvalidator: (color) => chroma.valid(color),\n\t\t},\n\t},\n\n\tcomputed: {\n\t\t...resolveThemeableProps('notice', ['color']),\n\t\ticonComponent() {\n\t\t\tif (this.type === 'error') {\n\t\t\t\treturn AlertCircle;\n\t\t\t}\n\t\t\tif (this.type === 'success') {\n\t\t\t\treturn CheckCircle;\n\t\t\t}\n\t\t\tif (this.type === 'warning') {\n\t\t\t\treturn AlertTriangle;\n\t\t\t}\n\t\t\treturn Info;\n\t\t},\n\t\tshowActions() {\n\t\t\treturn this.$slots.actions && this.variant === 'block';\n\t\t},\n\t\tstyle() {\n\t\t\treturn {\n\t\t\t\t'--color': this.resolvedColor,\n\t\t\t\t'--color-icon': this.resolvedColor,\n\t\t\t};\n\t\t},\n\t},\n\n\tcreated() {\n\t\tassert.warn(!(this.variant === 'inline' && this.$slots.actions), 'inline Notices cannot have an actions slot');\n\t},\n};\n</script>\n\n<style module=\"$s\">\n.Notice {\n\tcolor: var(--color);\n\tfont-size: 14px;\n\tline-height: 24px;\n\tborder-radius: 8px;\n}\n\n.IconContentWrapper {\n\tdisplay: flex;\n}\n\n.ActionsWrapper {\n\tdisplay: flex;\n\tjustify-content: flex-end;\n}\n\n.ActionsWrapper > * {\n\tmargin-right: 24px;\n}\n\n.ActionsWrapper > *:last-child {\n\tmargin-right: 0;\n}\n\n.type_error {\n\t--color: #a12712;\n\t--color-icon: #d83e3b;\n}\n\n.type_warning {\n\t--color: #584400;\n\t--color-icon: #f2bd0d;\n}\n\n.type_success {\n\t--color: #035203;\n\t--color-icon: #1fad1f;\n}\n\n.variant_block {\n\tpadding: 16px;\n\tbackground-color: var(--neutral-10, rgba(238, 93, 93, 0.1));\n}\n\n.type_info {\n\t--color: var(--neutral-80, rgba(24, 24, 24, 1));\n\t--color-icon: var(--neutral-90, rgba(24, 24, 24, 1));\n}\n\n.IconAligner {\n\tdisplay: flex;\n\talign-items: center;\n\theight: 24px;\n\tmargin-right: 8px;\n}\n\n.Icon {\n\twidth: 16px;\n\theight: 16px;\n\tfill: transparent;\n\tstroke: var(--color-icon);\n}\n</style>\n"],"names":[],"sourceRoot":""}