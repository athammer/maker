{"version":3,"file":"styles.css","mappings":"AAyJA,+BACA,iBACA,mBAGA,sBADA,aAIA,wDADA,2BADA,oDAGA,8BACA,CCzGA,+BACA,2BACA,6BAUA,uDACA,YACA,qFAEA,mCAVA,yCAWA,eAbA,cAKA,oBADA,kBADA,oBAGA,oBAKA,aAVA,8BAMA,eAsBA,CAdA,gDACA,gBACA,CAEA,qCACA,6GAGA,CAEA,wCACA,mBACA,UACA,CAGA,+BAEA,qFADA,sEAMA,CAHA,wCACA,4EACA","sources":["webpack://@square/maker/./src/components/Choice/src/Choice.vue","webpack://@square/maker/./src/components/Choice/src/ChoiceOption.vue"],"sourcesContent":["<template>\n\t<div\n\t\t:class=\"$s.Choice\"\n\t\t:style=\"style\"\n\t>\n\t\t<slot />\n\t</div>\n</template>\n\n<script>\n\nimport { MThemeKey, defaultTheme, resolveThemeableProps } from '@square/maker/components/Theme';\nimport assert from '@square/maker/utils/assert';\nimport { getContrast } from '@square/maker/utils/get-contrast';\nimport { colord } from 'colord';\nimport key from './key';\n\nexport default {\n\tprovide() {\n\t\t/**\n\t\t * Unfortunately, it's difficult to pass reactive data via a provider in Vue 2\n\t\t * Vue 3 will bring the `computed` helper to make (most of) this cleaner\n\t\t */\n\t\treturn {\n\t\t\t[key]: this,\n\t\t};\n\t},\n\n\tinject: {\n\t\ttheme: {\n\t\t\tdefault: defaultTheme(),\n\t\t\tfrom: MThemeKey,\n\t\t},\n\t},\n\n\tmodel: {\n\t\tprop: 'selected',\n\t\tevent: 'choice:update',\n\t},\n\n\tprops: {\n\t\t/**\n\t\t * Selected choice option\n\t\t */\n\t\tselected: {\n\t\t\ttype: undefined,\n\t\t\tdefault: undefined,\n\t\t},\n\t\t/**\n\t\t * Disables choice option\n\t\t */\n\t\tdisabled: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false,\n\t\t},\n\t\t/**\n\t\t * Selects single choice option or multiple choice options\n\t\t */\n\t\tmode: {\n\t\t\ttype: String,\n\t\t\tdefault: 'single-select',\n\t\t\tvalidator: (modeValue) => ['single-select', 'multi-select'].includes(modeValue),\n\t\t},\n\t\t/**\n\t\t * Background color of a selected option\n\t\t */\n\t\tselectedColor: {\n\t\t\ttype: String,\n\t\t\tdefault: undefined,\n\t\t\tvalidator: (color) => colord(color).isValid,\n\t\t},\n\t},\n\n\tdata() {\n\t\treturn {\n\t\t\tcurrentValue: this.selected,\n\t\t\tisMultiSelect: this.mode === 'multi-select',\n\t\t};\n\t},\n\n\tcomputed: {\n\t\t...resolveThemeableProps('choice', ['selectedColor']),\n\t\tcontrastColor() {\n\t\t\treturn getContrast(this.resolvedSelectedColor, '#fff');\n\t\t},\n\n\t\tdisabledContrastColor() {\n\t\t\tconst alphaValue = 0.4;\n\t\t\treturn colord(this.contrastColor).alpha(alphaValue);\n\t\t},\n\n\t\tstyle() {\n\t\t\tif (this.resolvedSelectedColor) {\n\t\t\t\treturn {\n\t\t\t\t\t'--selected-background-color': this.resolvedSelectedColor,\n\t\t\t\t\t'--selected-text-color': this.contrastColor,\n\t\t\t\t\t'--selected-disabled-text-color': this.disabledContrastColor,\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn {};\n\t\t},\n\t},\n\n\twatch: {\n\t\tselected() {\n\t\t\tthis.validateProps();\n\t\t\tthis.currentValue = this.selected;\n\t\t},\n\n\t\tcurrentValue(newValue) {\n\t\t\tthis.$emit('choice:update', newValue);\n\t\t},\n\t},\n\n\tcreated() {\n\t\tthis.validateProps();\n\t},\n\n\tmethods: {\n\t\tvalidateProps() {\n\t\t\tif (this.isMultiSelect) {\n\t\t\t\tassert.error(Array.isArray(this.selected), 'The v-model value for a multi-select must be of type Array.');\n\t\t\t}\n\t\t},\n\n\t\tisSelected(value) {\n\t\t\tif (this.isMultiSelect) {\n\t\t\t\treturn this.currentValue.includes(value);\n\t\t\t}\n\t\t\treturn this.currentValue === value;\n\t\t},\n\n\t\tselectValue(value) {\n\t\t\tif (this.isMultiSelect) {\n\t\t\t\tconst currentValueArray = this.currentValue.slice();\n\n\t\t\t\tif (currentValueArray.includes(value)) {\n\t\t\t\t\tconst singleValue = 1;\n\t\t\t\t\tcurrentValueArray.splice(currentValueArray.indexOf(value), singleValue);\n\t\t\t\t} else {\n\t\t\t\t\tcurrentValueArray.push(value);\n\t\t\t\t}\n\n\t\t\t\tvalue = currentValueArray;\n\t\t\t}\n\n\t\t\tthis.currentValue = value;\n\t\t},\n\t},\n};\n</script>\n\n<style module=\"$s\">\n.Choice {\n\t--font-size: 14px;\n\t--line-height: 24px;\n\n\tdisplay: flex;\n\tbox-sizing: border-box;\n\tfont-weight: var(--maker-font-label-font-weight, 500);\n\tfont-size: var(--font-size);\n\tfont-family: var(--maker-font-label-font-family, inherit);\n\tline-height: var(--line-height);\n}\n</style>\n","<template>\n\t<button\n\t\t:class=\"[\n\t\t\t$s.ChoiceOption,\n\t\t\t{ [$s.selected]: isSelected },\n\t\t]\"\n\t\t:disabled=\"isDisabled\"\n\t\t@click=\"selectSelf\"\n\t>\n\t\t<slot />\n\t</button>\n</template>\n\n<script>\nimport key from './key';\n\nexport default {\n\tinject: {\n\t\tcontrolState: key,\n\t},\n\n\tprops: {\n\t\tvalue: {\n\t\t\ttype: undefined,\n\t\t\trequired: true,\n\t\t},\n\n\t\tdisabled: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false,\n\t\t},\n\t},\n\n\tcomputed: {\n\t\tisSelected() {\n\t\t\treturn this.controlState.isSelected(this.value);\n\t\t},\n\n\t\tisDisabled() {\n\t\t\treturn this.disabled || this.controlState.disabled;\n\t\t},\n\t},\n\n\tmethods: {\n\t\tselectSelf() {\n\t\t\tthis.controlState.selectValue(this.value);\n\t\t},\n\t},\n};\n</script>\n\n<style module=\"$s\">\n/*\n\tDefined in Choice component:\n\t--selected-background-color\n\t--selected-text-color\n\t--selected-disabled-text-color\n*/\n.ChoiceOption {\n\t--button-padding: 12px 24px;\n\t--radius-rounded-default: 4px;\n\n\tflex-shrink: 0;\n\tpadding: var(--button-padding);\n\tcolor: var(--maker-color-neutral-90, #222);\n\tfont-weight: inherit;\n\tfont-size: inherit;\n\tfont-family: inherit;\n\tline-height: inherit;\n\ttext-align: left;\n\tbackground-color: var(--maker-color-neutral-10, #f2f2f2);\n\tborder: none;\n\tborder-radius: var(--maker-shape-default-border-radius, var(--radius-rounded-default));\n\toutline: none;\n\tbox-shadow: var(--focus-border, 0 0);\n\tcursor: pointer;\n\n\t&:not(:last-child) {\n\t\tmargin-right: 8px;\n\t}\n\n\t&:focus {\n\t\t--focus-border:\n\t\t\t0 0 0 1px var(--maker-color-neutral-10, #fff),\n\t\t\t0 0 0 3px var(--maker-color-neutral-20, rgba(0, 0, 0, 0.3));\n\t}\n\n\t&:disabled {\n\t\tcursor: not-allowed;\n\t\topacity: 0.5;\n\t}\n}\n\n.selected {\n\tcolor: var(--selected-text-color, var(--maker-color-neutral-10, #f1f1f1));\n\tbackground-color: var(--selected-background-color, var(--maker-color-neutral-90, #222));\n\n\t&:disabled {\n\t\tcolor: var(--selected-disabled-text-color, var(--maker-color-neutral-20, #666));\n\t}\n}\n</style>\n"],"names":[],"sourceRoot":""}